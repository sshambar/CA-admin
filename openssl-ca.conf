# This configuration file governs how OpenSSL should operate for this CA.

# year 2100 should be long enough
default_enddate = 21000101000000Z
default_crl_days = 30

unique_subject = no
crl_extensions = crl_ext

name_opt = ca_default
cert_opt = ca_default

# any extensions not defined in x509_extensions are copied
copy_extensions = copy
x509_extensions = v3_ca_sign
default_md = sha256

# DN options
policy = policy_cn
preserve = no
email_in_dn = no

[ ca ]
default_ca = CA_ec

[ CA_rsa ]
# default for RSA keys
dir = ./rsa

certs = $dir/certs
new_certs_dir = $dir/newcerts

database = $dir/state/index.txt
serial = $dir/state/serial

certificate = $dir/certs/ca.crt
private_key = $dir/private/ca.key

# for certificate revocation lists.
crlnumber = $dir/state/crlnumber
crl = $dir/crl.pem

[ CA_ec ]
# default for EC keys
dir = ./ec

certs = $dir/certs
new_certs_dir = $dir/newcerts

database = $dir/state/index.txt
serial = $dir/state/serial

certificate = $dir/certs/ca.crt
private_key = $dir/private/ca.key

# for certificate revocation lists.
crlnumber = $dir/state/crlnumber
crl = $dir/crl.pem

# For the CA policy
[ policy_cn ]
countryName     = optional
stateOrProvinceName = optional
organizationName    = optional
commonName      = supplied
emailAddress    = optional

[ req ]
default_bits = 2048
distinguished_name = req_distinguished_name
string_mask = utf8only
default_md = sha256
# encrypt_key = no
# override with '-reqexts <section>'
req_extensions = v3_req

[ req_distinguished_name ]
commonName = Common Name (e.g. server FQDN)
commonName_max = 64

# v3 Extensions (`man x509v3_config`).

[ v3_ca ]
# default root CA, to use: "-extensions v3_ca"
basicConstraints = critical, CA:TRUE, pathlen:1
keyUsage = critical, cRLSign, keyCertSign
subjectKeyIdentifier = hash
# authorityKeyIdentifier not required for self-signed root CA by PXIX pt 1

[ v3_intermediate_ca ]
# default root CA, to use: "-extensions v3_intermediate_ca"
basicConstraints = critical, CA:TRUE, pathlen:0
keyUsage = critical, digitalSignature, cRLSign, keyCertSign
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always

[ v3_req_client ]
# client cert, to use: "-extensions v3_req_client"
basicConstraints = critical, CA:FALSE
subjectKeyIdentifier = hash
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth

[ v3_req ]
# client cert, to use: "-extensions v3_req_client"
basicConstraints = critical, CA:FALSE
subjectKeyIdentifier = hash
keyUsage = critical, digitalSignature, keyEncipherment

[ v3_req_server ]
# server cert (default)
basicConstraints = critical, CA:FALSE
subjectKeyIdentifier = hash
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth

[ v3_req_mixed ]
# server cert (default)
basicConstraints = critical, CA:FALSE
subjectKeyIdentifier = hash
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth, clientAuth

[ v3_ca_sign ]
# signing overrides
basicConstraints = critical, CA:FALSE
authorityKeyIdentifier = keyid

[ crl_ext ]
# Extension for CRLs (`man x509v3_config`).
authorityKeyIdentifier=keyid:always

[ ocsp ]
# Extension for OCSP signing certificates (`man ocsp`).
basicConstraints = CA:FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature
extendedKeyUsage = critical, OCSPSigning

# vim: ft=dosini :
